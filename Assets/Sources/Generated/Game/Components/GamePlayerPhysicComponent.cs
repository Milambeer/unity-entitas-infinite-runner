//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlayerPhysicComponent playerPhysic { get { return (PlayerPhysicComponent)GetComponent(GameComponentsLookup.PlayerPhysic); } }
    public bool hasPlayerPhysic { get { return HasComponent(GameComponentsLookup.PlayerPhysic); } }

    public void AddPlayerPhysic(bool newIsJumping, bool newIsStable) {
        var index = GameComponentsLookup.PlayerPhysic;
        var component = CreateComponent<PlayerPhysicComponent>(index);
        component.isJumping = newIsJumping;
        component.isStable = newIsStable;
        AddComponent(index, component);
    }

    public void ReplacePlayerPhysic(bool newIsJumping, bool newIsStable) {
        var index = GameComponentsLookup.PlayerPhysic;
        var component = CreateComponent<PlayerPhysicComponent>(index);
        component.isJumping = newIsJumping;
        component.isStable = newIsStable;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerPhysic() {
        RemoveComponent(GameComponentsLookup.PlayerPhysic);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerPhysic;

    public static Entitas.IMatcher<GameEntity> PlayerPhysic {
        get {
            if (_matcherPlayerPhysic == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerPhysic);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerPhysic = matcher;
            }

            return _matcherPlayerPhysic;
        }
    }
}
